import { initializeApp, getApps } from "firebase/app";
import { getAuth, connectAuthEmulator } from "firebase/auth";
import {
  getFirestore,
  connectFirestoreEmulator,
  initializeFirestore,
} from "firebase/firestore";
import { getFunctions, connectFunctionsEmulator } from "firebase/functions";
import { getStorage, connectStorageEmulator } from "firebase/storage";

const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
};

// Kh·ªüi t·∫°o Firebase ch·ªâ m·ªôt l·∫ßn
const app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];
const auth = getAuth(app);

// T·∫°o Firestore v·ªõi c·∫•u h√¨nh n√¢ng cao ƒë·ªÉ kh·∫Øc ph·ª•c l·ªói ERR_QUIC_PROTOCOL_ERROR
// Removed duplicate declaration of db

// Bu·ªôc s·ª≠ d·ª•ng long polling thay v√¨ WebChannel/QUIC ƒë·ªÉ tr√°nh l·ªói k·∫øt n·ªëi
const db = initializeFirestore(app, {
  experimentalForceLongPolling: true, // S·ª≠ d·ª•ng long polling thay v√¨ WebChannel (QUIC)
});

const functions = getFunctions(app);
const storage = getStorage(app);

// S·ª≠ d·ª•ng Firebase Emulator trong m√¥i tr∆∞·ªùng development
if (
  process.env.NODE_ENV === "development" &&
  process.env.NEXT_PUBLIC_USE_FIREBASE_EMULATOR === "true"
) {
  console.log("üî• S·ª≠ d·ª•ng Firebase Emulator");

  // K·∫øt n·ªëi v·ªõi Auth Emulator
  connectAuthEmulator(auth, "http://localhost:9099");

  // K·∫øt n·ªëi v·ªõi Firestore Emulator
  connectFirestoreEmulator(db, "localhost", 8080);

  // K·∫øt n·ªëi v·ªõi Functions Emulator
  connectFunctionsEmulator(functions, "localhost", 5001);

  // K·∫øt n·ªëi v·ªõi Storage Emulator
  connectStorageEmulator(storage, "localhost", 9199);
}

export { app, auth, db, functions, storage };
